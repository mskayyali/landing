.layout {
  position: fixed;
  inset: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgb(17, 17, 17);
  overflow: hidden;
  opacity: 0;
  animation: fadeIn 0.5s ease-out forwards;
  /* Theme variables will be set on this root element */
  --theme-primary: #22b455;
  --theme-text: #ffffff;
  --theme-dim-text: #b4b4b4;
  --theme-border: rgba(34, 180, 85, 0.2);
  --theme-background: rgba(17, 17, 17, 0.85);
}

/* Add transitions for smooth theme changes */
.layout * {
  transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;
}

.backgroundLayer {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  opacity: 0;
  animation: fadeIn 0.8s ease-out forwards;
  animation-delay: 0.3s;
  background-color: var(--theme-background);
  transition: background-color 0.3s ease;
}

.backgroundGrid {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  opacity: 0.5;
}

.windowsLayer {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  pointer-events: none; /* Allow clicks to pass through to windows */
  opacity: 0;
  animation: fadeIn 0.5s ease-out forwards;
  animation-delay: 0.8s;
}

.windowsLayer > * {
  pointer-events: auto; /* Re-enable pointer events for windows */
}

.terminal {
  position: absolute;
  background-color: var(--theme-background);
  backdrop-filter: blur(8px);
  border: 1px solid var(--theme-border);
  width: 800px;
  height: 600px;
  color: var(--theme-text);
}

.terminalContent {
  height: 100%;
  padding: 1.5rem;
  color: var(--theme-text);
}

.terminalOutput {
  width: 100%;
  height: 100%;
  background-color: transparent;
  color: var(--theme-dim-text);
  font-family: var(--font-geist-mono);
  font-size: 14px;
  line-height: 1.6;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.terminalOutput > * {
  margin-bottom: 0.5rem;
  white-space: pre-wrap;
  word-break: break-word;
  color: var(--theme-dim-text);
  transition: color 0.2s ease;
  opacity: 0;
  animation: fadeIn 0.3s ease-out forwards;
}

/* Welcome message styling for first line */
.terminalOutput > *:first-child {
  color: var(--theme-primary);
  font-weight: 500;
}

/* Terminal Content */
.terminal :global(.react-terminal) {
  width: 100% !important;
  height: 100% !important;
  background-color: transparent !important;
  color: var(--theme-dim-text) !important;
  font-family: var(--font-geist-mono) !important;
  font-size: 14px !important;
  padding: 1.5rem !important;
  line-height: 1.6 !important;
}

.terminal :global(.react-terminal-wrapper) {
  width: 100% !important;
  height: 100% !important;
  background-color: transparent !important;
  display: flex !important;
  flex-direction: column !important;
}

.terminal :global(.react-terminal-line) {
  margin-bottom: 0.5rem !important;
  white-space: pre-wrap !important;
  word-break: break-word !important;
  color: var(--theme-dim-text) !important;
  transition: color 0.2s ease !important;
  opacity: 0;
  animation: fadeIn 0.3s ease-out forwards;
}

/* Welcome message styling */
.terminal :global(.react-terminal-line:first-child) {
  color: var(--theme-primary) !important;
  font-weight: 500 !important;
}

/* Remove boot sequence specific styling */
.terminal :global(.react-terminal-line:nth-child(-n+4)) {
  font-family: var(--font-geist-mono) !important;
}

/* Prompt styling */
.terminal :global(.react-terminal-prompt) {
  color: var(--theme-primary) !important;
  margin-right: 0.75rem !important;
  font-weight: 500 !important;
  opacity: 0;
  animation: fadeIn 0.3s ease-out forwards;
}

.terminal :global(.react-terminal-input) {
  color: var(--theme-text) !important;
  caret-color: var(--theme-primary) !important;
  background: transparent !important;
  border: none !important;
  outline: none !important;
  flex: 1 !important;
  font-family: var(--font-geist-mono) !important;
}

/* Hide default window controls */
.terminal :global(.react-terminal-window-buttons),
.terminal :global(.react-terminal-window-title) {
  display: none !important;
}

/* Links */
.link {
  color: var(--theme-primary);
  text-decoration: none;
  transition: opacity 0.2s ease;
  border-bottom: 1px solid var(--theme-border);
  padding-bottom: 1px;
  position: relative;
  z-index: 2;
}

.link:hover {
  opacity: 0.8;
}

/* Loading State */
.terminalLoadingContent {
  color: var(--theme-dim-text);
  font-family: var(--font-geist-mono);
  font-size: 14px;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background: var(--theme-background);
  opacity: 0;
  animation: fadeIn 0.3s ease-out forwards;
}

.loadingDots {
  display: flex;
  gap: 4px;
  opacity: 0;
  animation: fadeIn 0.3s ease-out forwards;
  animation-delay: 0.2s;
}

.loadingDots span {
  animation: loadingDots 1.4s infinite;
  opacity: 0;
  font-size: 24px;
  line-height: 1;
}

.loadingDots span:nth-child(1) { animation-delay: 0s; }
.loadingDots span:nth-child(2) { animation-delay: 0.2s; }
.loadingDots span:nth-child(3) { animation-delay: 0.4s; }

@keyframes loadingDots {
  0% { opacity: 0; }
  50% { opacity: 1; }
  100% { opacity: 0; }
}

/* Mobile Responsiveness */

/* Small mobile devices (320px and up) */
@media (max-width: 480px) {
  .terminal {
    width: 100% !important;
    height: 100vh !important;
    margin: 0 !important;
    border: none !important;
    border-radius: 0 !important;
  }

  .terminalContent {
    padding: 1rem;
    height: calc(100% - 40px);
  }

  .terminalOutput {
    font-size: 13px;
    line-height: 1.5;
    gap: 0.375rem;
  }

  .terminalOutput > * {
    margin-bottom: 0.375rem;
  }

  .link {
    padding-bottom: 2px;
    border-bottom-width: 1px;
  }
}

/* Medium mobile devices and small tablets (481px - 768px) */
@media (min-width: 481px) and (max-width: 768px) {
  .terminal {
    width: calc(100% - 1rem) !important;
    height: calc(100vh - 1rem) !important;
    margin: 0.5rem !important;
    border-radius: 8px !important;
  }

  .terminalContent {
    padding: 1.25rem;
  }

  .terminalOutput {
    font-size: 14px;
    gap: 0.4rem;
  }
}

/* Large tablets and small desktops (769px - 1024px) */
@media (min-width: 769px) and (max-width: 1024px) {
  .terminal {
    width: 700px;
    height: 550px;
  }

  .terminalContent {
    padding: 1.375rem;
  }
}

/* Very small devices (under 320px) */
@media (max-width: 319px) {
  .terminal {
    width: 100% !important;
    height: 100vh !important;
    margin: 0 !important;
    border: none !important;
    border-radius: 0 !important;
  }

  .terminalContent {
    padding: 0.75rem;
  }

  .terminalOutput {
    font-size: 12px;
    line-height: 1.4;
    gap: 0.25rem;
  }

  .terminalOutput > * {
    margin-bottom: 0.25rem;
  }
}

/* Landscape orientation on mobile */
@media (max-width: 768px) and (orientation: landscape) {
  .terminal {
    width: calc(100vw - 1rem) !important;
    height: calc(100vh - 1rem) !important;
    margin: 0.5rem !important;
  }

  .terminalContent {
    padding: 1rem;
  }

  .terminalOutput {
    font-size: 13px;
  }
}

/* High DPI mobile devices */
@media (max-width: 768px) and (-webkit-min-device-pixel-ratio: 2) {
  .terminalOutput {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .link {
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
} 